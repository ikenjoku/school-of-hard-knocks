{"version":3,"sources":["../server/server.js"],"names":["app","install","use","static","json","get","req","res","filter","query","status","scoreCard_gte","scoreCard","$gte","parseInt","db","collection","find","toArray","then","students","metadata","length","_metadata","records","catch","error","console","log","message","studentId","params","id","_id","limit","next","student","sendFile","resolve","post","newStudent","body","entryDate","Date","err","validateStudent","cleanupStudent","insertOne","result","insertedId","put","update","convertStudent","savedStudent","connect","connection","listen"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AANA,MAAMA,MAAM,wBAAZ;;AAOA,2BAAiBC,OAAjB;;AAEAD,IAAIE,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,IAAIE,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEAJ,IAAIK,GAAJ,CAAQ,eAAR,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,UAAMC,SAAS,EAAf;AACA,QAAIF,IAAIG,KAAJ,CAAUC,MAAd,EAAsBF,OAAOE,MAAP,GAAgBJ,IAAIG,KAAJ,CAAUC,MAA1B;AACtB,QAAIJ,IAAIG,KAAJ,CAAUE,aAAd,EAA6BH,OAAOI,SAAP,GAAmB,EAAnB;AAC7B,QAAIN,IAAIG,KAAJ,CAAUE,aAAd,EAA6BH,OAAOI,SAAP,CAAiBC,IAAjB,GAAwBC,SAASR,IAAIG,KAAJ,CAAUE,aAAnB,EAAkC,EAAlC,CAAxB;;AAE7BI,OAAGC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+BT,MAA/B,EAAuCU,OAAvC,GACKC,IADL,CACUC,YAAY;AACd,cAAMC,WAAW,EAAE,eAAeD,SAASE,MAA1B,EAAjB;AACAf,YAAIH,IAAJ,CAAS,EAAEmB,WAAWF,QAAb,EAAuBG,SAASJ,QAAhC,EAAT;AACH,KAJL,EAIOK,KAJP,CAIaC,SAAS;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACAnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,0BAAyBH,KAAM,EAA3C,EAArB;AACH,KAPL;AAQH,CAdD;;AAgBA1B,IAAIK,GAAJ,CAAQ,mBAAR,EAA6B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,QAAIuB,SAAJ;AACA,QAAI;AACAA,oBAAY,sBAAaxB,IAAIyB,MAAJ,CAAWC,EAAxB,CAAZ;AACH,KAFD,CAEE,OAAON,KAAP,EAAc;AACZnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,8BAA6BH,KAAM,EAA/C,EAArB;AACA;AACH;;AAEDX,OAAGC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+B,EAAEgB,KAAKH,SAAP,EAA/B,EAAmDI,KAAnD,CAAyD,CAAzD,EAA4DC,IAA5D,GACKhB,IADL,CACUiB,WAAW;AACb,YAAI,CAACA,OAAL,EAAc7B,IAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,oBAAmBC,SAAU,EAAzC,EAArB,EAAd,KACKvB,IAAIH,IAAJ,CAASgC,OAAT;AACR,KAJL,EAIOX,KAJP,CAIaC,SAAS;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACAnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,0BAAyBH,KAAM,EAA3C,EAArB;AACH,KAPL;AAQH,CAjBD;;AAmBA1B,IAAIK,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBA,QAAI8B,QAAJ,CAAa,eAAKC,OAAL,CAAa,mBAAb,CAAb;AACH,CAFD;;AAIAtC,IAAIuC,IAAJ,CAAS,eAAT,EAA0B,CAACjC,GAAD,EAAMC,GAAN,KAAc;AACpC,UAAMiC,aAAalC,IAAImC,IAAvB;AACAD,eAAWE,SAAX,GAAuB,IAAIC,IAAJ,EAAvB;AACA,QAAI,CAACH,WAAW9B,MAAhB,EAAwB;AACpB8B,mBAAW9B,MAAX,GAAoB,QAApB;AACH;AACD,QAAI,CAAC8B,WAAW5B,SAAhB,EAA2B;AACvB4B,mBAAW5B,SAAX,GAAuB,EAAvB;AACH;AACD,UAAMgC,MAAM,kBAAQC,eAAR,CAAwB,kBAAQC,cAAR,CAAuBN,UAAvB,CAAxB,CAAZ;AACA,QAAII,GAAJ,EAAS;AACLrC,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,oBAAmBe,GAAI,EAAnC,EAArB;AACA;AACH;AACD7B,OAAGC,UAAH,CAAc,UAAd,EAA0B+B,SAA1B,CAAoCP,UAApC,EACKrB,IADL,CACU6B,UAAUjC,GAAGC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+B,EAAEgB,KAAKe,OAAOC,UAAd,EAA/B,EAA2Df,KAA3D,CAAiE,CAAjE,EAAoEC,IAApE,EADpB,EAEKhB,IAFL,CAEUqB,cAAc;AAChBjC,YAAIH,IAAJ,CAASoC,UAAT;AACH,KAJL,EAIOf,KAJP,CAIaC,SAAS;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACAnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,0BAAyBH,KAAM,EAA3C,EAArB;AACH,KAPL;AAQH,CAtBD;;AAwBA1B,IAAIkD,GAAJ,CAAQ,mBAAR,EAA6B,CAAC5C,GAAD,EAAMC,GAAN,KAAc;AACvC,QAAIuB,SAAJ;AACA,QAAI;AACAA,oBAAY,sBAAaxB,IAAIyB,MAAJ,CAAWC,EAAxB,CAAZ;AACH,KAFD,CAEE,OAAON,KAAP,EAAc;AACZnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,8BAA6BH,KAAM,EAA/C,EAArB;AACA;AACH;AACD,UAAMU,UAAU9B,IAAImC,IAApB;AACA,WAAOL,QAAQH,GAAf;AACA,UAAMW,MAAM,kBAAQC,eAAR,CAAwBT,OAAxB,CAAZ;AACA,QAAIQ,GAAJ,EAAS;AACLrC,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,oBAAmBe,GAAI,EAAnC,EAArB;AACA;AACH;AACDjB,YAAQC,GAAR,CAAYtB,IAAIyB,MAAhB;AACAJ,YAAQC,GAAR,CAAYtB,IAAImC,IAAhB;AACA1B,OAAGC,UAAH,CAAc,UAAd,EAA0BmC,MAA1B,CAAiC,EAAElB,KAAKH,SAAP,EAAjC,EAAqD,kBAAQsB,cAAR,CAAuBhB,OAAvB,CAArD,EACKjB,IADL,CACU,MAAMJ,GAAGC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+B,EAAEgB,KAAKH,SAAP,EAA/B,EAAmDI,KAAnD,CAAyD,CAAzD,EAA4DC,IAA5D,EADhB,EAEKhB,IAFL,CAEUkC,gBAAgB;AAClB9C,YAAIH,IAAJ,CAASiD,YAAT;AACH,KAJL,EAIO5B,KAJP,CAIaC,SAAS;AACdC,gBAAQC,GAAR,CAAYF,KAAZ;AACAnB,YAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEyB,SAAU,0BAAyBH,KAAM,EAA3C,EAArB;AACH,KAPL;AAQH,CAzBD;;AA2BA,IAAIX,EAAJ;AACA,qBAAYuC,OAAZ,CAAoB,kCAApB,EACKnC,IADL,CACUoC,cAAc;AAChBxC,SAAKwC,UAAL;AACAvD,QAAIwD,MAAJ,CAAW,IAAX,EAAiB,MAAM7B,QAAQC,GAAR,CAAY,0BAAZ,CAAvB;AACH,CAJL,EAIOH,KAJP,CAIaC,SAAS;AACdC,YAAQC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH,CANL","file":"server.js","sourcesContent":["import express from \"express\";\r\nconst app = express();\r\nimport bodyParser from \"body-parser\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Student from './student.js';\r\nimport 'babel-polyfill';\r\nimport path from 'path';\r\nimport SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\n\r\napp.use(express.static('static'));\r\napp.use(bodyParser.json());\r\n\r\napp.get('/api/students', (req, res) => {\r\n    const filter = {};\r\n    if (req.query.status) filter.status = req.query.status;\r\n    if (req.query.scoreCard_gte) filter.scoreCard = {};\r\n    if (req.query.scoreCard_gte) filter.scoreCard.$gte = parseInt(req.query.scoreCard_gte, 10);\r\n\r\n    db.collection('students').find(filter).toArray()\r\n        .then(students => {\r\n            const metadata = { \"total_count\": students.length };\r\n            res.json({ _metadata: metadata, records: students })\r\n        }).catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n        });\r\n});\r\n\r\napp.get('/api/students/:id', (req, res) => {\r\n    let studentId;\r\n    try {\r\n        studentId = new ObjectId(req.params.id);\r\n    } catch (error) {\r\n        res.status(422).json({ message: `Invalid Student ID format: ${error}` });\r\n        return;\r\n    }\r\n\r\n    db.collection('students').find({ _id: studentId }).limit(1).next()\r\n        .then(student => {\r\n            if (!student) res.status(404).json({ message: `No such student: ${studentId}` });\r\n            else res.json(student);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` })\r\n        });\r\n});\r\n\r\napp.get('*', (req, res) => {\r\n    res.sendFile(path.resolve('static/index.html'));\r\n});\r\n\r\napp.post(\"/api/students\", (req, res) => {\r\n    const newStudent = req.body;\r\n    newStudent.entryDate = new Date();\r\n    if (!newStudent.status) {\r\n        newStudent.status = \"Novice\"\r\n    }\r\n    if (!newStudent.scoreCard) {\r\n        newStudent.scoreCard = 40;\r\n    }\r\n    const err = Student.validateStudent(Student.cleanupStudent(newStudent));\r\n    if (err) {\r\n        res.status(422).json({ message: `Invalid request: ${err}` });\r\n        return;\r\n    }\r\n    db.collection('students').insertOne(newStudent)\r\n        .then(result => db.collection('students').find({ _id: result.insertedId }).limit(1).next())\r\n        .then(newStudent => {\r\n            res.json(newStudent);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n        });\r\n});\r\n\r\napp.put('/api/students/:id', (req, res) => {\r\n    let studentId;\r\n    try {\r\n        studentId = new ObjectId(req.params.id);\r\n    } catch (error) {\r\n        res.status(422).json({ message: `Invalid student ID format: ${error}` });\r\n        return;\r\n    }\r\n    const student = req.body;\r\n    delete student._id;\r\n    const err = Student.validateStudent(student);\r\n    if (err) {\r\n        res.status(422).json({ message: `Invalid request: ${err}` });\r\n        return;\r\n    }\r\n    console.log(req.params);\r\n    console.log(req.body);\r\n    db.collection('students').update({ _id: studentId }, Student.convertStudent(student))\r\n        .then(() => db.collection('students').find({ _id: studentId }).limit(1).next())\r\n        .then(savedStudent => {\r\n            res.json(savedStudent);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n        });\r\n});\r\n\r\nlet db;\r\nMongoClient.connect(\"mongodb://localhost/sohkstudents\")\r\n    .then(connection => {\r\n        db = connection;\r\n        app.listen(3200, () => console.log(\"App started on port 3200\"));\r\n    }).catch(error => {\r\n        console.log('ERROR', error);\r\n    });"]}